[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Brian Cho. Author. Theo Saarinen. Author, maintainer. Simon Walter. Author. Jasjeet Sekhon. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cho B, Saarinen T, Walter S, Sekhon J (2022). Distillery: Model distillation interpretability methods machine learning models. R package version 0.0.0.15, https://github.com/forestry-labs/interpretability_sandbox.","code":"@Manual{,   title = {Distillery: Model distillation and interpretability methods for machine learning models},   author = {Brian Cho and Theo Saarinen and Simon Walter and Jasjeet Sekhon},   year = {2022},   note = {R package version 0.0.0.15},   url = {https://github.com/forestry-labs/interpretability_sandbox}, }"},{"path":"/index.html","id":"distillery-model-distillation-and-interpretability-methods-for-machine-learning-models","dir":"","previous_headings":"","what":"Model distillation and interpretability methods for machine learning models","title":"Model distillation and interpretability methods for machine learning models","text":"package provides several methods model distillation interpretability general black box machine learning models. page serves clear example using package, use MASS crabs data set.","code":""},{"path":"/index.html","id":"general-prediction-wrapper","dir":"","previous_headings":"","what":"General Prediction Wrapper","title":"Model distillation and interpretability methods for machine learning models","text":"First load crabs data set. contains physical measurements several species crabs collected Fremantle, West Australia. can train random forest estimate Carapace Width crabs based features. order use interpretability features, must create Predictor class estimator want interpret. class standardizes predictions, tracks outcome feature, stores training data.","code":"library(MASS) library(data.table) library(ggplot2) library(Distillery) library(Rforestry)  set.seed(491)  data <- MASS::crabs levels(data$sex) <- list(Male = \"M\", Female = \"F\") levels(data$sp) <- list(Orange = \"O\", Blue = \"B\") colnames(data) <- c(\"Species\",\"Sex\",\"Index\",\"Frontal Lobe\",                     \"Rear Width\", \"Carapace Length\",\"Carapace Width\",\"Body Depth\") # Get training data set set.seed(491) test_ind <- sample(1:nrow(data), nrow(data)%/%5) train_reg <- data[-test_ind,] test_reg <- data[test_ind,]  # Train a random forest on the data set forest <- forestry(x=train_reg[,-which(names(train_reg)==\"Carapace Width\")],                    y=train_reg[,which(names(train_reg)==\"Carapace Width\")])  # Create a predictor wrapper for the forest # this allows us to use a standard wrapper for querying any  # trained estimator forest_predictor <- Predictor$new(model = forest,                                    data=train_reg,                                    y=\"Carapace Width\",                                   task = \"regression\")"},{"path":"/index.html","id":"interpretability-wrapper","dir":"","previous_headings":"","what":"Interpretability Wrapper","title":"Model distillation and interpretability methods for machine learning models","text":"initialized Predictor object forest, can pass Interpretor class. future, several methods implemented different options, now defaults creating PDP functions + plots estimator. Examining Interpretor, can see current method selected: “pdp”, feature names, training data indices, lists pdp functions. pdp functions stored two lists, one 1-d pdp functions one 2-d pdp functions. feature, can retrieve pdp function selecting entry list feature name","code":"forest_interpret <- Interpreter$new(predictor = forest_predictor)  print(forest_interpret) one_feat <- train_reg$`Frontal Lobe` preds_pdp <- forest_interpret$functions.1d$`Frontal Lobe`(one_feat) print(preds_pdp)"},{"path":"/index.html","id":"plotter-wrapper","dir":"","previous_headings":"","what":"Plotter Wrapper","title":"Model distillation and interpretability methods for machine learning models","text":"order use pdp functions create plots, can use plot method Interpreter class.","code":"# check plotter wrapper forest_plot <- plot(forest_interpret,                      method = \"pdp+ice\",                     features = c(\"Frontal Lobe\"),                     features.2d = data.frame(col1 = c(\"Frontal Lobe\", \"Frontal Lobe\", \"Frontal Lobe\"),                                              col2 = c(\"Species\", \"Sex\", \"Rear Width\")))  plots <- plot(forest_plot) plots[[1]] plots[[2]] plots[[3]] plots[[4]]"},{"path":"/index.html","id":"pdp-distillation","dir":"","previous_headings":"","what":"PDP Distillation","title":"Model distillation and interpretability methods for machine learning models","text":"can also distill model using distill method interpreter object.","code":"forest_surrogate <- distill(forest_interpret)  predictions_forest <- predict(forest,                               newdata = test_reg[,-ncol(test_reg)]) predictions_surrogate <- predict(forest_surrogate,                                  test_reg[,-ncol(test_reg)])                                   plot(predictions_forest, predictions_surrogate)"},{"path":"/index.html","id":"todo","dir":"","previous_headings":"","what":"TODO","title":"Model distillation and interpretability methods for machine learning models","text":"nice future: - ICE plot clustering - Lookup table embeddings PDP surrogate - sort loneliness index implemented - covariates observation support training set, create bootstrap confidence bands PDP predictions. - Fix 2-D PDP plots","code":""},{"path":"/reference/Interpreter.html","id":null,"dir":"Reference","previous_headings":"","what":"Interpreter class description — Interpreter","title":"Interpreter class description — Interpreter","text":"wrapper class based predictor object examining predictions model. predictions respect one two features. two methods interpreting model based one two features partial dependence plots (PDP), averages marginal distribution predictions model, accumulated local effects (ALE) functions averages conditional distribution predictions model. necessary argument Predictor object. arguments optional, may useful specify number samples specific data points (data.points) training data large. can greatly reduce time computation. output, model returns interpreter object two lists functions: one interpreting single feature's role black-box model, intepreting pair features' role black-box model. interpretability functions built possible feature (pair features). functions return vector averaged predictions equal length number values (number rows) input function.","code":""},{"path":"/reference/Interpreter.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Interpreter class description — Interpreter","text":"class wraps Predictor object application different interpretability methods.","code":""},{"path":"/reference/Interpreter.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Interpreter class description — Interpreter","text":"predictor Predictor object contains model user wants query. parameter required initialize Interpreter object. entries vector must match column names `data` parameter Predictor object. features optional list single features want create PDP functions . features.2d two column data frame contains pairs names want create 2D pdp functions . entries data frame must match column names `data` parameter Predictor object. data.points vector indices data points training data frame used observations creating PDP/ALE functions. training data large, can greatly reduce required computation pass downsampled subset training data pdp function construction. Alternatively, one interested understanding model predictions specific subgroup, indices observations given subgroup can passed . pdp.1d List functions giving single feature interpretations model. pdp.2d List functions giving two-feature interpretations model feat.class vector contains class feature (categorical continuous) (\"pdp\"). can either set \"pdp\" \"ale\". center.value(s) center feature plots . list length equal length features. grid.points list vectors containing grid points use predictions. grid.size number grid points plot continuous feature saved list caches previous calculations 1-d ICE plots, 1-d PDP plots, 2-d PDP plots, grid points building distillery model. saves uncentered calculations. ale.grid list caches saved predictions ALE method","code":""},{"path":[]},{"path":"/reference/Interpreter.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Interpreter class description — Interpreter","text":"Interpreter$new() Interpreter$clone()","code":""},{"path":[]},{"path":"/reference/Interpreter.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpreter class description — Interpreter","text":"","code":"Interpreter$new(   predictor = NULL,   samples = 1000,   data.points = NULL,   grid.size = 50 )"},{"path":"/reference/Interpreter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpreter class description — Interpreter","text":"predictor Predictor object contains model user wants query. parameter required initialize Interpreter object. entries vector must match column names `data` parameter Predictor object. samples number observations used interpretability method. number given, default set minimum 1000 number rows training data set. data.points indices data points used PDP/ALE.      overwrites \"samples\" parameter . (\"pdp\"). can either set \"pdp\" \"ale\". grid.size number grid points create pdp functions / plots feature.","code":""},{"path":"/reference/Interpreter.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Interpreter class description — Interpreter","text":"`Interpreter` object.","code":""},{"path":"/reference/Interpreter.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Interpreter class description — Interpreter","text":"objects class cloneable method.","code":""},{"path":"/reference/Interpreter.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Interpreter class description — Interpreter","text":"","code":"Interpreter$clone(deep = FALSE)"},{"path":"/reference/Interpreter.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interpreter class description — Interpreter","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Interpreter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Interpreter class description — Interpreter","text":"","code":"library(Distillery) library(Rforestry) #> ##  #> ##  Rforestry (Version 0.9.0.98, Build Date: R 4.1.1; x86_64-apple-darwin17.0; 2022-04-11 19:41:15 UTC; unix) #> ##  See https://github.com/forestry-labs for additional documentation. #> ##  Please cite software as: #> ##    Soren R. Kunzel, Theo F. Saarinen, Edward W. Liu, Jasjeet S. Sekhon. 2019. #> ##    ''Linear Aggregation in Tree-based Estimators.'' arXiv preprint  #> ##    arXiv:1906.06463. https://arxiv.org/abs/1906.06463  #> ## set.seed(491) data <- MASS::crabs  levels(data$sex) <- list(Male = \"M\", Female = \"F\") levels(data$sp) <- list(Orange = \"O\", Blue = \"B\") colnames(data) <- c(\"Species\",\"Sex\",\"Index\",\"Frontal Lobe\", \"Rear Width\", \"Carapace Length\",\"Carapace Width\",\"Body Depth\")  test_ind <- sample(1:nrow(data), nrow(data)%/%5) train_reg <- data[-test_ind,] test_reg <- data[test_ind,]   forest <- forestry(x=train_reg[,-which(names(train_reg)==\"Carapace Width\")], y=train_reg[,which(names(train_reg)==\"Carapace Width\")])  forest_predictor <- Predictor$new(model = forest, data=train_reg, y=\"Carapace Width\", task = \"regression\")  forest_interpret <- Interpreter$new(predictor = forest_predictor)"},{"path":"/reference/Predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"Predictor class description — Predictor","title":"Predictor class description — Predictor","text":"wrapper class generic ML algorithms (xgboost, RF, BART, rpart, etc.) order standardize predictions given different algorithms compatible interpretability functions. necessary variables model, data, y. variables optional, depend use cases. Type used prediction function specified. outputs algorithm must values regression, probabilities classification. classification problems two categories, output comes vectors probabilities specified \"class\" category. ML interpretability, types predictions (ex: predictions spit factor) allowed.","code":""},{"path":"/reference/Predictor.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Predictor class description — Predictor","text":"class wraps machine learning model order provide  standardized method predictions different models. prediction method must constructed, optional argument type","code":""},{"path":"/reference/Predictor.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Predictor class description — Predictor","text":"data training data used training model. data frame matching data frame model given training. model object corresponding trained model want make Predictor object . model generic predict method, user provide custom predict function accepts data frame. task prediction task model trained perform (`classification` `regression`). class class get predictions. specify get predictions (probabilites) observation specific class (e.g. Male Female). parameter necessary classification predictions single vector predictions. prediction.function optional parameter model generic prediction function. take data frame return vector predictions observation data frame. y name outcome feature `data` data frame.","code":""},{"path":[]},{"path":"/reference/Predictor.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Predictor class description — Predictor","text":"Predictor$new() Predictor$clone()","code":""},{"path":[]},{"path":"/reference/Predictor.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictor class description — Predictor","text":"","code":"Predictor$new(   model = NULL,   data = NULL,   predict.func = NULL,   y = NULL,   task = NULL,   class = NULL,   type = NULL )"},{"path":"/reference/Predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictor class description — Predictor","text":"model object corresponding trained model want make Predictor object . model generic predict method, user provide custom predict function accepts data frame. data training data used training model. data frame matching data frame model given training. predict.func optional parameter model generic prediction function. take data frame return vector predictions observation data frame. y name outcome feature `data` data frame. task prediction task model trained perform (`classification` `regression`). class class get predictions. specify get predictions (probabilites) observation specific class (e.g. Male Female). parameter necessary classification predictions single vector predictions. type type predictions done (.e. 'response' predicted probabliities classification). feature used predict.func specified.","code":""},{"path":"/reference/Predictor.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Predictor class description — Predictor","text":"`Predictor` object.","code":""},{"path":"/reference/Predictor.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Predictor class description — Predictor","text":"objects class cloneable method.","code":""},{"path":"/reference/Predictor.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Predictor class description — Predictor","text":"","code":"Predictor$clone(deep = FALSE)"},{"path":"/reference/Predictor.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predictor class description — Predictor","text":"deep Whether make deep clone.","code":""},{"path":"/reference/Predictor.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predictor class description — Predictor","text":"","code":"library(Distillery) library(Rforestry) set.seed(491) data <- MASS::crabs  levels(data$sex) <- list(Male = \"M\", Female = \"F\") levels(data$sp) <- list(Orange = \"O\", Blue = \"B\") colnames(data) <- c(\"Species\",\"Sex\",\"Index\",\"Frontal Lobe\", \"Rear Width\", \"Carapace Length\",\"Carapace Width\",\"Body Depth\")  test_ind <- sample(1:nrow(data), nrow(data)%/%5) train_reg <- data[-test_ind,] test_reg <- data[test_ind,]   forest <- forestry(x=train_reg[,-which(names(train_reg)==\"Carapace Width\")], y=train_reg[,which(names(train_reg)==\"Carapace Width\")])  forest_predictor <- Predictor$new(model = forest, data=train_reg, y=\"Carapace Width\", task = \"regression\")"},{"path":"/reference/Surrogate.html","id":null,"dir":"Reference","previous_headings":"","what":"Surrogate class description — Surrogate","title":"Surrogate class description — Surrogate","text":"class distilled surrogate models.","code":""},{"path":"/reference/Surrogate.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Surrogate class description — Surrogate","text":"initalize class . automatically created distill function interpreter class.","code":""},{"path":"/reference/Surrogate.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"Surrogate class description — Surrogate","text":"interpreter interpreter object use standardized wrapper model weights weights used recombine PDPs surrogate original model intercept intercept term use predictions feature.centers center value features determined model center.mean Boolean value determines whether use mean-centered data predictions grid list PDPS determine prediction. snap.grid Boolean determines whether use grid.points","code":""},{"path":[]},{"path":"/reference/Surrogate.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Surrogate class description — Surrogate","text":"Surrogate$new() Surrogate$clone()","code":""},{"path":[]},{"path":"/reference/Surrogate.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate class description — Surrogate","text":"","code":"Surrogate$new(   interpreter,   weights,   intercept,   feature.centers,   center.mean,   grid,   snap.grid )"},{"path":"/reference/Surrogate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate class description — Surrogate","text":"interpreter interpreter object want build surrogate model . weights weights given feature intercept baseline value. uncentered, 0, centered, mean predictions original model based grid points set. feature.centers baseline value effect feature. uncentered, 0. center.mean boolean value shows whether model centered uncentered model grid values snap snap.grid turned snap.grid Boolean determines use previously calculated values re-predict using functions.","code":""},{"path":"/reference/Surrogate.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Surrogate class description — Surrogate","text":"surrogate model object can use predictions","code":""},{"path":"/reference/Surrogate.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Surrogate class description — Surrogate","text":"objects class cloneable method.","code":""},{"path":"/reference/Surrogate.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Surrogate class description — Surrogate","text":"","code":"Surrogate$clone(deep = FALSE)"},{"path":"/reference/Surrogate.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Surrogate class description — Surrogate","text":"deep Whether make deep clone.","code":""},{"path":"/reference/ale.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs an ALE for a model. — ale","title":"Constructs an ALE for a model. — ale","text":"Constructs ALE model.","code":""},{"path":"/reference/ale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs an ALE for a model. — ale","text":"","code":"ale(   predict_function,   num_grid_points,   training_data,   variable_names,   center = \"zero\",   grid_points,   window_size )"},{"path":"/reference/ale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs an ALE for a model. — ale","text":"predict_function function taking single tibble argument returning model predictions corresponding tibble. num_grid_points number grid_points construct ALE training_data training data used fit model variable_names character vector column names training_data ALE required. center one \"uncentered\" meaning plots centered, \"mean\" meaning plots centered mean \"zero\" meaning ALE passes origin. using center == \"zero\" recommend setting window_size otherwise smaller possibly empty set used compute ALE zero. grid_points grid points use AlE calculation. window_size fraction data (zero one) used compute ALE point.","code":""},{"path":"/reference/build.grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Build grid used for weights in distilled surrogate model — build.grid","title":"Build grid used for weights in distilled surrogate model — build.grid","text":"dataframe storing true predictions PDP predictions","code":""},{"path":"/reference/build.grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build grid used for weights in distilled surrogate model — build.grid","text":"","code":"build.grid(   object,   feat.ind = 1:length(object$features),   save = T,   fit.train = T )"},{"path":"/reference/build.grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build grid used for weights in distilled surrogate model — build.grid","text":"object Interpreter object feat.ind indices features Interpreter's features want include PDP functions distilled model. save Boolean saving results interpreter object. Default TRUE. fit.train Boolean indicating whether fit subsampled training data possible combinations grid.points. Default TRUE, means use subsampled training data.","code":""},{"path":"/reference/build.grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build grid used for weights in distilled surrogate model — build.grid","text":"dataframe used find weights regression (one-hot encoding         categorical features)","code":""},{"path":"/reference/center.preds.html","id":null,"dir":"Reference","previous_headings":"","what":"Centers the predicted values for 1-d ICE and PDP plots or 2-d PDP plots — center.preds","title":"Centers the predicted values for 1-d ICE and PDP plots or 2-d PDP plots — center.preds","text":"Given specified 'center.' values Interpreter object,              function centers plots Interpreter object              specified type plot.","code":""},{"path":"/reference/center.preds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centers the predicted values for 1-d ICE and PDP plots or 2-d PDP plots — center.preds","text":"","code":"center.preds(object, features = NULL, plot.type, feats.2d = NULL)"},{"path":"/reference/center.preds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Centers the predicted values for 1-d ICE and PDP plots or 2-d PDP plots — center.preds","text":"object Interpreter object use features 1-D features want center plot.type type plot user wants center predictions . one either \"ICE\", \"PDP.1D\", \"PDP.2D\" feats.2d 2-D features want center.","code":""},{"path":"/reference/center.preds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Centers the predicted values for 1-d ICE and PDP plots or 2-d PDP plots — center.preds","text":"centered data frame/matrix values plot","code":""},{"path":"/reference/center.preds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Centers the predicted values for 1-d ICE and PDP plots or 2-d PDP plots — center.preds","text":"center.preds","code":""},{"path":"/reference/distill.html","id":null,"dir":"Reference","previous_headings":"","what":"Build surrogate model from distilled model — distill","title":"Build surrogate model from distilled model — distill","text":"Builds surrogate model PDP functions","code":""},{"path":"/reference/distill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build surrogate model from distilled model — distill","text":"","code":"distill(   object,   center.mean = T,   features = 1:length(object$features),   cv = F,   snap.grid = T,   fit.train = T,   params.glmnet = list(),   params.cv.glmnet = list() )"},{"path":"/reference/distill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build surrogate model from distilled model — distill","text":"object Interpreter object center.mean Boolean value determines whether center column predictions respective means. Default TRUE features indices features Interpreter's features want include PDP functions distilled model. cv Boolean indicates whether want cross-validate fitted coefficients regularizer. done regularizing coefficients. snap.grid Boolean function determines whether model recalculates value predicted uses approximation previous calculations. Default TRUE. fit.train Fit training data fit expand.grid. true, fit training data. Default TRUE. params.glmnet Optional list parameters pass glmnet fitting PDP curves resemble original predictions. specifying parameters, one can lasso ridge regression. params.cv.glmnet Optional list parameters pass cv.glmnet fitting    PDP curves resemble original predictions. specifying parameters, one can lasso ridge regression.","code":""},{"path":"/reference/distill.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build surrogate model from distilled model — distill","text":"surrogate class object can used predictions","code":""},{"path":"/reference/localSurrogate.html","id":null,"dir":"Reference","previous_headings":"","what":"Given a interpreter object with at least one pair of features,\n  create a small surrogate model for the two features using the PDP function\n  as the output and the two features as the independent variables. — localSurrogate","title":"Given a interpreter object with at least one pair of features,\n  create a small surrogate model for the two features using the PDP function\n  as the output and the two features as the independent variables. — localSurrogate","text":"Plots returns Rforestry object single tree explaining   PDP surface.","code":""},{"path":"/reference/localSurrogate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Given a interpreter object with at least one pair of features,\n  create a small surrogate model for the two features using the PDP function\n  as the output and the two features as the independent variables. — localSurrogate","text":"","code":"localSurrogate(object, interact = FALSE, params.forestry = list())"},{"path":"/reference/localSurrogate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Given a interpreter object with at least one pair of features,\n  create a small surrogate model for the two features using the PDP function\n  as the output and the two features as the independent variables. — localSurrogate","text":"object Interpreter object make plots + surrogate . interact indicator specifying surrogate model also given interaction terms create surrogate models . Default FALSE. params.forestry Optional list parameters pass surrogate model. Defaults standard Rforestry parameters ntree = 1 maxDepth = 2.","code":""},{"path":"/reference/local_effect.html","id":null,"dir":"Reference","previous_headings":"","what":"Local effect gives the local effect on the predictions of a model\nin the window around the set_value — local_effect","title":"Local effect gives the local effect on the predictions of a model\nin the window around the set_value — local_effect","text":"Parameters:     @param variable_name - variable want perturb calculate local effect","code":""},{"path":"/reference/local_effect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local effect gives the local effect on the predictions of a model\nin the window around the set_value — local_effect","text":"","code":"local_effect(   variable_name,   lower_limit,   upper_limit,   set_value,   window_size,   training_data,   predict_function )"},{"path":"/reference/local_effect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Local effect gives the local effect on the predictions of a model\nin the window around the set_value — local_effect","text":"@param lower_limit - lower limit variable want use @param upper_limit - upper limit variable want use @param set_value - value want perturb variable around @param window_size - optional parameter size window around                   variable perturb predict @param training_data - training data use make predictions @param predict_function - prediction function use make predictions model Return:     single value mean local effect peturbation     predictions model.","code":""},{"path":"/reference/plot-Interpreter.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting method for Interpretor model — plot-Interpreter","title":"Plotting method for Interpretor model — plot-Interpreter","text":"Plots PDP, ALE, ICE plots Interpreter object","code":""},{"path":"/reference/plot-Interpreter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting method for Interpretor model — plot-Interpreter","text":"","code":"# S3 method for Interpreter plot(   x,   method = \"pdp+ice\",   features = NULL,   features.2d = NULL,   clusters = NULL,   clusterType = \"preds\",   ... )"},{"path":"/reference/plot-Interpreter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting method for Interpretor model — plot-Interpreter","text":"x Interpreter object generate plots method type plot want generate. Must one \"ice\", \"pdp+ice\", \"pdp\", \"ale\" features 1-D features want produce plots . features.2d 2-D features want produce plots arguments clusters number clusters cluster ICE predictions . NULL, one must use method \"ice\" \"pdp+ice\" clusterType indicator specifying method use clustering. possible options \"preds\", \"gradient\". \"preds\" used, clusters determined running K means predictions ICE functions. \"gradient\" option used, clusters determined running K means numerical gradient predictions ICE functions.","code":""},{"path":"/reference/plot-Interpreter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting method for Interpretor model — plot-Interpreter","text":"list plots 1-d features 2-d features. 2-d features         one continuous one categorical feature, plot linear plot         continuous feature group colors representing categorical feature.         two continuous features, plot heatmap shade representing         value outcome.","code":""},{"path":"/reference/predict-Predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict method for Predictor class — predict-Predictor","title":"Predict method for Predictor class — predict-Predictor","text":"Gives single column predictions model  wrapped Predictor object","code":""},{"path":"/reference/predict-Predictor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict method for Predictor class — predict-Predictor","text":"","code":"# S3 method for Predictor predict(object, newdata, ...)"},{"path":"/reference/predict-Predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict method for Predictor class — predict-Predictor","text":"object Predictor object use make predictions. newdata data frame use independent features prediction. ... Additional arguments passed model predict function. instance, can different aggregation options (aggregation = \"oob\") accepted prediction function model.","code":""},{"path":"/reference/predict-Predictor.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict method for Predictor class — predict-Predictor","text":"data frame single column containing predictions  row newdata data frame.","code":""},{"path":"/reference/predict-Surrogate.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction method for the distilled surrogate model — predict-Surrogate","title":"Prediction method for the distilled surrogate model — predict-Surrogate","text":"Predicts outputs given new data","code":""},{"path":"/reference/predict-Surrogate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction method for the distilled surrogate model — predict-Surrogate","text":"","code":"# S3 method for Surrogate predict(object, newdata, ...)"},{"path":"/reference/predict-Surrogate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction method for the distilled surrogate model — predict-Surrogate","text":"object surrogate object distilled interpreter newdata dataframe use predictions ... Additional parameters pass predict","code":""},{"path":"/reference/predict_ALE.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructs ALE for the given interpreter object — predict_ALE","title":"Constructs ALE for the given interpreter object — predict_ALE","text":"Constructs ALE given interpreter object","code":""},{"path":"/reference/predict_ALE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructs ALE for the given interpreter object — predict_ALE","text":"","code":"predict_ALE(x, feature, training_data, save = T)"},{"path":"/reference/predict_ALE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructs ALE for the given interpreter object — predict_ALE","text":"x interpreter object feature feature build ALE (must continuous) training_data training data use order build ALE save Boolean save ALE predictions num_grid_points Number gridpoints feature","code":""},{"path":"/reference/predict_ALE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructs ALE for the given interpreter object — predict_ALE","text":"tibble contains ALE predictions given values","code":""},{"path":"/reference/predict_ICE.Plotter.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Function for ICE Plots — predict_ICE.Plotter","title":"Prediction Function for ICE Plots — predict_ICE.Plotter","text":"Gives predictions point grid.","code":""},{"path":"/reference/predict_ICE.Plotter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Function for ICE Plots — predict_ICE.Plotter","text":"","code":"predict_ICE.Plotter(object, features = NULL, save = TRUE)"},{"path":"/reference/predict_ICE.Plotter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Function for ICE Plots — predict_ICE.Plotter","text":"object Interpeter object use. features Features predict ICE plots save boolean indicator indicate whether calculations saved interpreter object . can help reduce computation ICE functions used many times, requires additional memory store predictions.","code":""},{"path":"/reference/predict_ICE.Plotter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Function for ICE Plots — predict_ICE.Plotter","text":"list data frames, one feature. data frame, first         column contains grid values feature, subsequent         column single observation corresponding prediction model         given feature set grid point value.","code":""},{"path":"/reference/predict_PDP.1D.Plotter.html","id":null,"dir":"Reference","previous_headings":"","what":"Prediction Function for PDP Plots — predict_PDP.1D.Plotter","title":"Prediction Function for PDP Plots — predict_PDP.1D.Plotter","text":"Gives prediction curve specified features              plotter object","code":""},{"path":"/reference/predict_PDP.1D.Plotter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prediction Function for PDP Plots — predict_PDP.1D.Plotter","text":"","code":"predict_PDP.1D.Plotter(object, features = NULL, save = TRUE)"},{"path":"/reference/predict_PDP.1D.Plotter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prediction Function for PDP Plots — predict_PDP.1D.Plotter","text":"object Interpreter object plot PDP curves . features features predict PDP functions foor save boolean indicator indicate whether calculations saved interpreter object . can help reduce computation PDP functions used many times, requires additional memory store predictions.","code":""},{"path":"/reference/predict_PDP.1D.Plotter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prediction Function for PDP Plots — predict_PDP.1D.Plotter","text":"list data frames grid points PDP prediction values         feature object","code":""},{"path":"/reference/predict_PDP.1D.Plotter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Prediction Function for PDP Plots — predict_PDP.1D.Plotter","text":"predict_PDP.1D.Plotter","code":""},{"path":"/reference/predict_PDP.2D.Plotter.html","id":null,"dir":"Reference","previous_headings":"","what":"Two Dimensional Prediction Curve for PDP Plots — predict_PDP.2D.Plotter","title":"Two Dimensional Prediction Curve for PDP Plots — predict_PDP.2D.Plotter","text":"Gives prediction surface specified feature pairs              interpreter object (features.2d)","code":""},{"path":"/reference/predict_PDP.2D.Plotter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Two Dimensional Prediction Curve for PDP Plots — predict_PDP.2D.Plotter","text":"","code":"predict_PDP.2D.Plotter(object, feat.2d, save = TRUE)"},{"path":"/reference/predict_PDP.2D.Plotter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Two Dimensional Prediction Curve for PDP Plots — predict_PDP.2D.Plotter","text":"object Interpreter object use. feat.2d 2-column dataframe matrix gives first variable first column, second variable next. number rows number 2-D PDPs one like save boolean indicator indicate whether calculations saved interpreter object . can help reduce computation PDP functions used many times, requires additional memory store predictions.","code":""},{"path":"/reference/predict_PDP.2D.Plotter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Two Dimensional Prediction Curve for PDP Plots — predict_PDP.2D.Plotter","text":"list data frames pair features.2d. data frame         contains columns corresponding grid points two selected         features column corresponding predictions model         given combination grid points.","code":""},{"path":"/reference/predict_PDP.2D.Plotter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Two Dimensional Prediction Curve for PDP Plots — predict_PDP.2D.Plotter","text":"predict_PDP.2D.Plotter","code":""},{"path":"/reference/print-Predictor.html","id":null,"dir":"Reference","previous_headings":"","what":"The Printing method for Predictor class — print-Predictor","title":"The Printing method for Predictor class — print-Predictor","text":"Prints given Predictor object.","code":""},{"path":"/reference/print-Predictor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Printing method for Predictor class — print-Predictor","text":"","code":"# S3 method for Predictor print(x, ...)"},{"path":"/reference/print-Predictor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Printing method for Predictor class — print-Predictor","text":"x Predictor object print ... Additional arguments passed plotting function.","code":""},{"path":"/reference/set.center.at.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets a new center in the plots made by an Interpreter — set.center.at","title":"Sets a new center in the plots made by an Interpreter — set.center.at","text":"Method setting center value specific feature","code":""},{"path":"/reference/set.center.at.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets a new center in the plots made by an Interpreter — set.center.at","text":"","code":"set.center.at(object, feature, value)"},{"path":"/reference/set.center.at.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets a new center in the plots made by an Interpreter — set.center.at","text":"object Interpreter class want recenter plots . feature name specific feature want center plots . Can either continuous feature cetagorical feature. Must match name one features Interpreter model's training data set. value new value use plots specified feature centered . Must match type feature (factor level continuous value range specified feature).","code":""},{"path":"/reference/set.center.at.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sets a new center in the plots made by an Interpreter — set.center.at","text":"Unlike grid predictions, center.values modify previous saved calculations. Therefore, change remove previously calculated, saved data.","code":""},{"path":"/reference/set.grid.points.html","id":null,"dir":"Reference","previous_headings":"","what":"Sets grid points used for plotting — set.grid.points","title":"Sets grid points used for plotting — set.grid.points","text":"Method setting grid points specific feature plot","code":""},{"path":"/reference/set.grid.points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sets grid points used for plotting — set.grid.points","text":"","code":"set.grid.points(object, feature, values)"},{"path":"/reference/set.grid.points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sets grid points used for plotting — set.grid.points","text":"object Interpreter class want modify grid points . feature feature want supply new grid points . values set new values used grid points selected feature. Must vector entries range feature values training set must match type given feature (either vector factor levels vector continuous feature values).","code":""},{"path":"/reference/set.grid.points.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Sets grid points used for plotting — set.grid.points","text":"grid points determine calculations performed PDP/ICE functions, changing grid points remove previously calculated values 'Interpreter' object. 1-d ICE PDP plot, remove previous calculations given feature. 2-d PDP calcuations, remove plots include given feature features.","code":""}]
